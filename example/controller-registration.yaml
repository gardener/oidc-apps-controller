---
apiVersion: core.gardener.cloud/v1beta1
kind: ControllerDeployment
metadata:
  name: oidc-apps-controller
type: helm
injectGardenKubeconfig: true
providerConfig:
  chart: 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
  values:
    image:
      repository: europe-docker.pkg.dev/gardener-project/snapshots/gardener/extensions/oidc-apps-controller
      tag: latest
    imagePullSecrets:
      - name: gardener-images
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
    webhook:
      namespaceSelector:
        matchExpressions:
          - {key: "gardener.cloud/role", operator: "In", values: ["shoot","project"]}
          - {key: "shoot.gardener.cloud/no-cleanup", operator: "NotIn", values: ["true"]}
          - {key: "gardener.cloud/purpose", operator: "NotIn", values: ["kube-system"]}
          - {key: "kubernetes.io/metadata.name", operator: "NotIn", values: ["kube-system"]}
    vpa:
      enabled: true
    global:
      domainName: "... cluster domain ..." #cluster domain
      oauth2Proxy:
        sslInsecureSkipVerify: true
        insecureOidcSkipIssuerVerification: false
        insecureOidcSkipNonce: false
        oidcIssuerUrl: "... OIDC issuer URL ..."
        clientId: "... OIDC client ID ..."
        scope: "openid email groups"
      kubeRbacProxy:
        oidcCABundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== # base64 encoded OIDC CA bundle
    targets:
      - name: "shoot--plutono"
        namespaceSelector:
          matchLabels:
            gardener.cloud/role: shoot
        labelSelector:
          matchLabels:
            component: plutono
        targetPort: 3000
        ingress:
          create: true
          ingressClassName: "nginx-ingress-gardener"
          tlsSecretRef:
            name: "ingress-wildcard-cert"
      - name: "shoot--prometheus"
        namespaceSelector:
          matchLabels:
            gardener.cloud/role: shoot
        labelSelector:
          matchLabels:
            app: prometheus
        targetPort: 9090
        ingress:
          create: true
          ingressClassName: "nginx-ingress-gardener"
          tlsSecretRef:
            name: "ingress-wildcard-cert"
      - name: "garden-plutono"
        namespaceSelector:
          matchLabels:
            project.gardener.cloud/name: garden
        labelSelector:
          matchLabels:
            component: plutono
        targetPort: 3000
        ingress:
          create: true
          ingressClassName: "nginx-ingress-gardener"
          tlsSecretRef:
            name: "ingress-wildcard-cert"
            namespace: "garden"
      - name: "garden-prometheus"
        namespaceSelector:
          matchLabels:
            project.gardener.cloud/name: garden
        labelSelector:
          matchLabels:
            app: prometheus
        targetPort: 9090
        ingress:
          create: true
          ingressClassName: "nginx-ingress-gardener"
          tlsSecretRef:
            name: "ingress-wildcard-cert"
            namespace: "garden"
---
apiVersion: core.gardener.cloud/v1beta1
kind: ControllerRegistration
metadata:
  name: oidc-apps-controller
  annotations:
    security.gardener.cloud/pod-security-enforce: baseline
spec:
  deployment:
    deploymentRefs:
    - name: "oidc-apps-controller"
    policy: Always
---
