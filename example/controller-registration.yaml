---
apiVersion: core.gardener.cloud/v1beta1
kind: ControllerDeployment
metadata:
  name: oidc-apps-controller
type: helm
injectGardenKubeconfig: true
providerConfig:
  chart: 
  values:
    image:
      repository: europe-docker.pkg.dev/gardener-project/snapshots/gardener/extensions/oidc-apps-controller
      tag: latest
    imagePullSecrets:
      - name: gardener-images
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
    webhook:
      namespaceSelector:
        matchExpressions:
          - {key: "gardener.cloud/role", operator: "In", values: ["shoot","project"]}
          - {key: "shoot.gardener.cloud/no-cleanup", operator: "NotIn", values: ["true"]}
          - {key: "gardener.cloud/purpose", operator: "NotIn", values: ["kube-system"]}
          - {key: "kubernetes.io/metadata.name", operator: "NotIn", values: ["kube-system"]}
    vpa:
      enabled: true
    global:
      domainName: "... cluster domain ..." #cluster domain
      oauth2Proxy:
        sslInsecureSkipVerify: true
        insecureOidcSkipIssuerVerification: false
        insecureOidcSkipNonce: false
        oidcIssuerUrl: "... OIDC issuer URL ..."
        clientId: "... OIDC client ID ..."
        scope: "openid email groups"
      kubeRbacProxy:
        oidcCABundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== # base64 encoded OIDC CA bundle
    targets:
      - name: "shoot--plutono"
        namespaceSelector:
          matchLabels:
            gardener.cloud/role: shoot
        labelSelector:
          matchLabels:
            component: plutono
        targetPort: 3000
        ingress:
          create: true
          ingressClassName: "nginx-ingress-gardener"
          tlsSecretRef:
            name: "ingress-wildcard-cert"
      - name: "shoot--prometheus"
        namespaceSelector:
          matchLabels:
            gardener.cloud/role: shoot
        labelSelector:
          matchLabels:
            app: prometheus
        targetPort: 9090
        ingress:
          create: true
          ingressClassName: "nginx-ingress-gardener"
          tlsSecretRef:
            name: "ingress-wildcard-cert"
      - name: "garden-plutono"
        namespaceSelector:
          matchLabels:
            project.gardener.cloud/name: garden
        labelSelector:
          matchLabels:
            component: plutono
        targetPort: 3000
        ingress:
          create: true
          ingressClassName: "nginx-ingress-gardener"
          tlsSecretRef:
            name: "ingress-wildcard-cert"
            namespace: "garden"
      - name: "garden-prometheus"
        namespaceSelector:
          matchLabels:
            project.gardener.cloud/name: garden
        labelSelector:
          matchLabels:
            app: prometheus
        targetPort: 9090
        ingress:
          create: true
          ingressClassName: "nginx-ingress-gardener"
          tlsSecretRef:
            name: "ingress-wildcard-cert"
            namespace: "garden"
---
apiVersion: core.gardener.cloud/v1beta1
kind: ControllerRegistration
metadata:
  name: oidc-apps-controller
  annotations:
    security.gardener.cloud/pod-security-enforce: baseline
spec:
  deployment:
    deploymentRefs:
    - name: "oidc-apps-controller"
    policy: Always
---
