---
apiVersion: core.gardener.cloud/v1beta1
kind: ControllerDeployment
metadata:
  name: oidc-apps-controller
type: helm
providerConfig:
  chart: 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
  values:
    image:
      repository: europe-docker.pkg.dev/gardener-project/snapshots/gardener/extensions/oidc-apps-controller
      tag: v0.2.18-dev
    imagePullSecrets:
      - name: gardener-images
    webhook:
      namespaceSelector:
        matchExpressions:
          - {key: "gardener.cloud/role", operator: "In", values: ["shoot","project"]}
          - {key: "shoot.gardener.cloud/no-cleanup", operator: "NotIn", values: ["true"]}
          - {key: "gardener.cloud/purpose", operator: "NotIn", values: ["kube-system"]}
          - {key: "kubernetes.io/metadata.name", operator: "NotIn", values: ["kube-system"]}
    vpa:
      enabled: true
    configuration:
      domainName: "... cluster domain ..." #cluster domain
      oauth2Proxy:
        sslInsecureSkipVerify: true
        insecureOidcSkipIssuerVerification: false
        insecureOidcSkipNonce: false
        oidcIssuerUrl: "... OIDC issuer URL ..."
        clientId: "... OIDC client ID ..."
        scope: "openid email groups"
      kubeRbacProxy:
        oidcCABundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== # base64 encoded OIDC CA bundle
    targets:
      - name: "shoot--plutono"
        namespaceSelector:
          matchLabels:
            gardener.cloud/role: shoot
        labelSelector:
          matchLabels:
            component: plutono
        targetPort: 3000
        ingress:
          create: true
          ingressClassName: "nginx-ingress-gardener"
          tlsSecretRef:
            name: "ingress-wildcard-cert"
      - name: "shoot--prometheus"
        namespaceSelector:
          matchLabels:
            gardener.cloud/role: shoot
        labelSelector:
          matchLabels:
            app: prometheus
        targetPort: 9090
        ingress:
          create: true
          ingressClassName: "nginx-ingress-gardener"
          tlsSecretRef:
            name: "ingress-wildcard-cert"
      - name: "garden-plutono"
        namespaceSelector:
          matchLabels:
            project.gardener.cloud/name: garden
        labelSelector:
          matchLabels:
            component: plutono
        targetPort: 3000
        ingress:
          create: true
          ingressClassName: "nginx-ingress-gardener"
          tlsSecretRef:
            name: "ingress-wildcard-cert"
            namespace: "garden"
      - name: "garden-prometheus"
        namespaceSelector:
          matchLabels:
            project.gardener.cloud/name: garden
        labelSelector:
          matchLabels:
            app: prometheus
        targetPort: 9090
        ingress:
          create: true
          ingressClassName: "nginx-ingress-gardener"
          tlsSecretRef:
            name: "ingress-wildcard-cert"
            namespace: "garden"
---
apiVersion: core.gardener.cloud/v1beta1
kind: ControllerRegistration
metadata:
  name: oidc-apps-controller
  annotations:
    security.gardener.cloud/pod-security-enforce: baseline
spec:
  deployment:
    deploymentRefs:
    - name: "oidc-apps-controller"
    policy: Always
---
