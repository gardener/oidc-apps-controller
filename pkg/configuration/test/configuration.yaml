configuration:
  domainName: "domain.org"
  oauth2Proxy:
    scope: "openid email"
    clientId: "client-id"
    clientSecret: "client-secret"
    redirectUrl: "https://app.org/oauth2/callback"
    oidcIssuerUrl: "https://oidc-provider.org"
  kubeRbacProxy:
    kubeConfigStr: Imt1YmVjb25maWci
    kubeSecretRef:
      name: "kubeconfig"
  oidcCABundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  oidcCASecretRef:
    name: "oidc-ca"

targets:
  # A target that shall inherit the configuration from the root level
  - name: "test-01"

 # A target with concrete configuration
  - name: "test-02"
    namespaceSelector:
      matchLabels:
        kubernetes.io/metadata.name: test
    labelSelector:
      matchExpressions:
        - {key: "app.kubernetes.io/name", operator: "In", values: ["test-02"]}
    targetPort: 8443
    targetProtocol: https
    ingress:
      create: true
      hostPrefix: "test-02-prefix"
      tlsSecretRef:
        name: "ingress-tls"
    oauth2Proxy:
      scope: "openid email target"
      clientId: "client-id-target"
      clientSecret: "client-secret-target"
      redirectUrl: "https://app.org/oauth2/callback"
      oidcIssuerUrl: "https://oidc-provider-target.org"
      sslInsecureSkipVerify: true
      insecureOidcSkipIssuerVerification: true
      insecureOidcSkipNonce: true
    kubeRbacProxy:
      kubeConfigStr: a3ViZWNvbmZpZy10YXJnZXQK
      kubeSecretRef:
        name: "target-kubeconfig"
    oidcCASecretRef:
      name: "target-oidc-ca"

  # A target with specific ingress host
  - name: test-03
    namespaceSelector:
      matchLabels:
        kubernetes.io/metadata.name: test
    labelSelector:
      matchLabels:
        app.kubernetes.io/name: test-03
    ingress:
      host: "this.overwrites"

  # A target without explicit ingress host
  - name: test-04
    namespaceSelector:
      matchLabels:
        kubernetes.io/metadata.name: test
    labelSelector:
      matchLabels:
        app.kubernetes.io/name: test-04

