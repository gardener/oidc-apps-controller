// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gardener/oidc-apps-controller/pkg/certificates (interfaces: CertificateOperations)
//
// Generated by this command:
//
//	mockgen -package certificates -destination=mocks.go github.com/gardener/oidc-apps-controller/pkg/certificates CertificateOperations
//

// Package certificates is a generated GoMock package.
package certificates

import (
	rsa "crypto/rsa"
	x509 "crypto/x509"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockCertificateOperations is a mock of CertificateOperations interface.
type MockCertificateOperations struct {
	ctrl     *gomock.Controller
	recorder *MockCertificateOperationsMockRecorder
	isgomock struct{}
}

// MockCertificateOperationsMockRecorder is the mock recorder for MockCertificateOperations.
type MockCertificateOperationsMockRecorder struct {
	mock *MockCertificateOperations
}

// NewMockCertificateOperations creates a new mock instance.
func NewMockCertificateOperations(ctrl *gomock.Controller) *MockCertificateOperations {
	mock := &MockCertificateOperations{ctrl: ctrl}
	mock.recorder = &MockCertificateOperationsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCertificateOperations) EXPECT() *MockCertificateOperationsMockRecorder {
	return m.recorder
}

// CreateCertificate mocks base method.
func (m *MockCertificateOperations) CreateCertificate(template, parent *x509.Certificate, pub, priv any) (*x509.Certificate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCertificate", template, parent, pub, priv)
	ret0, _ := ret[0].(*x509.Certificate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateCertificate indicates an expected call of CreateCertificate.
func (mr *MockCertificateOperationsMockRecorder) CreateCertificate(template, parent, pub, priv any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCertificate", reflect.TypeOf((*MockCertificateOperations)(nil).CreateCertificate), template, parent, pub, priv)
}

// GenerateKey mocks base method.
func (m *MockCertificateOperations) GenerateKey(keyLength int) (*rsa.PrivateKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateKey", keyLength)
	ret0, _ := ret[0].(*rsa.PrivateKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateKey indicates an expected call of GenerateKey.
func (mr *MockCertificateOperationsMockRecorder) GenerateKey(keyLength any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateKey", reflect.TypeOf((*MockCertificateOperations)(nil).GenerateKey), keyLength)
}
